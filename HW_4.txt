 1. Создать внешний репозиторий c названием XML.
	Â GitHub > New Repositories
 2. Клонировать репозиторий XML на локальный компьютер.
	git clone (code)
 3. Внутри локального XML создать файл “new.xml”.
	cd XML
	touch new.xml
 4. Добавить файл под гит.
	git add .
 5. Закоммитить файл.
	git commit -m 'add file'
 6.Отправить файл на внешний GitHub репозиторий.
	git push
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	cat >> new.xml
	<?xml version="1.0" encoding="utf-8"?>
<author>
	<Name>Íåñóê Âîëîäèìèð Ìèêîëàéîâè÷</Name>
	<Age>37</Age>
</author>
		<Pets>
			<fish>1</fish>
</Pets>
<Salary>
	<Expected>"1000$"</Expected>
			</Salary>
	Ctrl+C
 8. Отправить изменения на внешний репозиторий.
	git add .
	git commit -m 'add file'
	git push
 9. Создать файл preferences.xml
	touch preferences.xml
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	cat >> preferences.xml
	<?xml version="1.0" encoding="utf-8"?>
        <Film>
        <favorite>DEADPOOL</favorite>
        </Film>
        <Series>
        <favorite>Game Of Thrones</favorite>
        </Series>
        <Food>
        <favorite>dumplings</favorite>
        </Food>
        <Season>
        <favorite>summer</favorite>
        </Season>
        <Country>
        <favorite>Asia</favorite>
        </Country>
	Ctrl+C
 11.Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	cat >> skills.xml
	<?xml version="1.0" encoding="utf-8"?>
<Skills>
	<topik_1>GitHub</topic_1>
	<topic_2>GitBash</topic_2>
	<topic_3>Jmeter</topic_3>
	<topic_4>Postman</topic_4>
	<topic_5>JSON</topic_5>
	<topic_6>XML</topic_6>
	<topic_7>SQL</topic_7>
	<topic_8>Scrum</topic_8>
</Skills>
	Ctrl+C
 12. Сделать коммит в одну строку.
	git add . && git commit -m 'new files'
 13. Отправить сразу 2 файла на внешний репозиторий.
	git push
 14. На веб интерфейсе создать файл bug_report.xml.
	Â GitHub cliñk [Add file]>[Great new file]
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Â GitHub click [Commit changes]
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	Â GitHub click [Edit this file]
	<?xml version="1.0" encoding="utf-8"?>
<Bug_report>
  <Bug_id>1</Bug_id>
  <Title>The SAVE DATA button is smaller than the others</Title>
  <Severity>trivial</Severity>
  <Priority>low</Priority>
  <Environment>"Redmi Note 10 Pro"</Environment>
  <AR>The application buttons have on view</AR>
  <ER>SAVE DATA button is smaller than the others</ER>
</Bug_report>	
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Â GitHub click [Commit changes]
 18. Синхронизировать внешний и локальный репозиторий XML.
	git pull
